@page "/events"
@using System.Diagnostics.Tracing
@using EventClient.Models
@using Microsoft.AspNetCore.Components.QuickGrid
@inject HttpClient Http

<PageTitle>Events</PageTitle>

<h1>Events</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (events == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <QuickGrid Items="@eventsForGrid">
        <PropertyColumn Property="@(e => e.Name)" Sortable="true"/>
        <PropertyColumn Property="@(e => e.Description)" Sortable="true"/>
        <PropertyColumn Property="@(e => e.StartTime)" Sortable="true"/>
        <PropertyColumn Property="@(e => e.Location)" Sortable="true"/>
    </QuickGrid>

    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Starttime</th>
            <th>Location</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var e in events)
        {
            <tr>
                <td>@e.Name</td>
                <td>@e.Description</td>
                <td>@e.StartTime</td>
                <td>@e.Location</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private Event[]? events;
    private IQueryable<Event> eventsForGrid;

    protected override async Task OnInitializedAsync()
    {
        events= await Http.GetFromJsonAsync<Event[]>("api/event") ?? Array.Empty<Event>();
        eventsForGrid = events.AsQueryable();
    }

}